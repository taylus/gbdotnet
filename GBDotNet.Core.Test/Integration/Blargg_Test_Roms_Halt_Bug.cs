using System.IO;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace GBDotNet.Core.Test.Integration
{
    [TestClass]
    public class Blargg_Test_Roms_Halt_Bug : Blargg_Test_Roms_Base
    {
        [TestMethod, Ignore("Passes, but doesn't write to serial port!")]
        public void Halt_Bug_Test_ROM()
        {
            //TODO: get running by reading the background map data as text:
            //the tile index numbers correspond to their ASCII equivalents,
            //so check out the results in a hex viewer:
            //(would this work for the other test ROMs + be faster?)
            //$9800 | 68 61 6C 74 20 62 75 67 20 20 20 20 20 20 20 20 | halt bug
            //$9810 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9820 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9830 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9840 | 49 45 20 49 46 20 49 46 20 44 45 20 20 20 20 20 | IE IF IF DE
            //$9850 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9860 | 30 31 20 31 30 20 46 31 20 30 43 30 34 20 20 20 | 01 10 F1 0C04
            //$9870 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9880 | 30 31 20 30 30 20 45 31 20 30 43 30 34 20 20 20 | 01 00 E1 0C04  
            //$9890 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$98A0 | 30 31 20 30 31 20 45 31 20 30 34 31 31 20 20 20 | 01 01 E1 0411  
            //$98B0 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$98C0 | 31 31 20 30 30 20 45 31 20 30 43 30 34 20 20 20 | 11 00 E1 0C04 
            //$98D0 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$98E0 | 31 31 20 31 30 20 46 31 20 30 34 31 31 20 20 20 | 11 10 F1 0411
            //$98F0 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9900 | 31 31 20 31 31 20 46 31 20 30 34 31 31 20 20 20 | 11 11 F1 0411  
            //$9910 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9920 | 45 31 20 30 30 20 45 31 20 30 43 30 34 20 20 20 | E1 00 E1 0C04 
            //$9930 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9940 | 45 31 20 45 30 20 45 31 20 30 43 30 34 20 20 20 | E1 00 E1 0C04 
            //$9950 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9960 | 45 31 20 45 31 20 45 31 20 30 34 31 31 20 20 20 | E1 E1 E1 0411 
            //$9970 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9980 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$9990 | 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 |
            //$99A0 | 50 61 73 73 65 64 20 20 20 20 20 20 20 20 20 20 | Passed
            RunTestRom(Path.Combine(GetTestRomsDirectory(), "halt_bug.gb"));
        }
    }
}
